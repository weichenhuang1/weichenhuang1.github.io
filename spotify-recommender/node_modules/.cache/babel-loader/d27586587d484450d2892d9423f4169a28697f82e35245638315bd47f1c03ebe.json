{"ast":null,"code":"var _jsxFileName = \"D:\\\\school\\\\projects\\\\spotify\\\\recs\\\\spotify-recommender\\\\frontend\\\\src\\\\components\\\\Recommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { fetchRecommendations } from \"../api\";\nimport PlaylistButton from \"./PlaylistButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [playlistUrl, setPlaylistUrl] = useState(null);\n  const getRecommendations = async () => {\n    const data = await fetchRecommendations();\n    setSongs(data.recommendations);\n    setPlaylistUrl(data.playlist_url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommended Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRecommendations,\n      style: styles.button,\n      children: \"Get Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: styles.list,\n      children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: styles.item,\n        children: [song.artist, \" - \", song.track, \" (\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: song.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Listen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 55\n        }, this), \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), songs.length > 0 && /*#__PURE__*/_jsxDEV(PlaylistButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 34\n    }, this), playlistUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: playlistUrl,\n        target: \"_blank\",\n        children: \"View Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Recommendations, \"9PKHUEkv+s/zhiHkA3iEpiChtQs=\");\n_c = Recommendations;\nconst styles = {\n  button: {\n    padding: \"10px 20px\",\n    fontSize: \"16px\",\n    backgroundColor: \"#1DB954\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"20px\",\n    cursor: \"pointer\",\n    margin: \"10px\"\n  },\n  list: {\n    listStyle: \"none\",\n    padding: 0\n  },\n  item: {\n    padding: \"10px\",\n    fontSize: \"18px\"\n  }\n};\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","fetchRecommendations","PlaylistButton","jsxDEV","_jsxDEV","Recommendations","_s","songs","setSongs","playlistUrl","setPlaylistUrl","getRecommendations","data","recommendations","playlist_url","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","styles","button","list","map","song","index","item","artist","track","href","url","target","rel","length","_c","padding","fontSize","backgroundColor","color","border","borderRadius","cursor","margin","listStyle","$RefreshReg$"],"sources":["D:/school/projects/spotify/recs/spotify-recommender/frontend/src/components/Recommendations.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { fetchRecommendations } from \"../api\";\r\nimport PlaylistButton from \"./PlaylistButton\";\r\n\r\nconst Recommendations = () => {\r\n    const [songs, setSongs] = useState([]);\r\n    const [playlistUrl, setPlaylistUrl] = useState(null);\r\n\r\n    const getRecommendations = async () => {\r\n        const data = await fetchRecommendations();\r\n        setSongs(data.recommendations);\r\n        setPlaylistUrl(data.playlist_url);\r\n    };\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n            <h2>Recommended Songs</h2>\r\n            <button onClick={getRecommendations} style={styles.button}>\r\n                Get Recommendations\r\n            </button>\r\n            <ul style={styles.list}>\r\n                {songs.map((song, index) => (\r\n                    <li key={index} style={styles.item}>\r\n                        {song.artist} - {song.track} (<a href={song.url} target=\"_blank\" rel=\"noopener noreferrer\">Listen</a>)\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {songs.length > 0 && <PlaylistButton />}\r\n            {playlistUrl && <p><a href={playlistUrl} target=\"_blank\">View Playlist</a></p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    button: {\r\n        padding: \"10px 20px\",\r\n        fontSize: \"16px\",\r\n        backgroundColor: \"#1DB954\",\r\n        color: \"white\",\r\n        border: \"none\",\r\n        borderRadius: \"20px\",\r\n        cursor: \"pointer\",\r\n        margin: \"10px\",\r\n    },\r\n    list: { listStyle: \"none\", padding: 0 },\r\n    item: { padding: \"10px\", fontSize: \"18px\" },\r\n};\r\n\r\nexport default Recommendations;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,oBAAoB,QAAQ,QAAQ;AAC7C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMW,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,IAAI,GAAG,MAAMX,oBAAoB,CAAC,CAAC;IACzCO,QAAQ,CAACI,IAAI,CAACC,eAAe,CAAC;IAC9BH,cAAc,CAACE,IAAI,CAACE,YAAY,CAAC;EACrC,CAAC;EAED,oBACIV,OAAA;IAAKW,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnDd,OAAA;MAAAc,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BlB,OAAA;MAAQmB,OAAO,EAAEZ,kBAAmB;MAACI,KAAK,EAAES,MAAM,CAACC,MAAO;MAAAP,QAAA,EAAC;IAE3D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTlB,OAAA;MAAIW,KAAK,EAAES,MAAM,CAACE,IAAK;MAAAR,QAAA,EAClBX,KAAK,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBzB,OAAA;QAAgBW,KAAK,EAAES,MAAM,CAACM,IAAK;QAAAZ,QAAA,GAC9BU,IAAI,CAACG,MAAM,EAAC,KAAG,EAACH,IAAI,CAACI,KAAK,EAAC,IAAE,eAAA5B,OAAA;UAAG6B,IAAI,EAAEL,IAAI,CAACM,GAAI;UAACC,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAlB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KACzG;MAAA,GAFSO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACJf,KAAK,CAAC8B,MAAM,GAAG,CAAC,iBAAIjC,OAAA,CAACF,cAAc;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACtCb,WAAW,iBAAIL,OAAA;MAAAc,QAAA,eAAGd,OAAA;QAAG6B,IAAI,EAAExB,WAAY;QAAC0B,MAAM,EAAC,QAAQ;QAAAjB,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7E,CAAC;AAEd,CAAC;AAAChB,EAAA,CA3BID,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AA6BrB,MAAMmB,MAAM,GAAG;EACXC,MAAM,EAAE;IACJc,OAAO,EAAE,WAAW;IACpBC,QAAQ,EAAE,MAAM;IAChBC,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,MAAM;IACpBC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACZ,CAAC;EACDpB,IAAI,EAAE;IAAEqB,SAAS,EAAE,MAAM;IAAER,OAAO,EAAE;EAAE,CAAC;EACvCT,IAAI,EAAE;IAAES,OAAO,EAAE,MAAM;IAAEC,QAAQ,EAAE;EAAO;AAC9C,CAAC;AAED,eAAenC,eAAe;AAAC,IAAAiC,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}