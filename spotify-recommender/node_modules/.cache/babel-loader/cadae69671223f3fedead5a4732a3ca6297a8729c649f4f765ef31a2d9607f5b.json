{"ast":null,"code":"var _jsxFileName = \"D:\\\\school\\\\projects\\\\spotify\\\\recs\\\\spotify-recommender\\\\frontend\\\\src\\\\components\\\\Recommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { fetchRecommendations } from \"../api\";\nimport PlaylistButton from \"./PlaylistButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [playlistUrl, setPlaylistUrl] = useState(null);\n  const [loading, setLoading] = useState(false); // ðŸ”¹ Track loading state\n  const [buttonText, setButtonText] = useState(\"Get Recommendations\");\n  const getRecommendations = async () => {\n    setLoading(true); // âœ… Show \"Loading...\"\n    setButtonText(\"Loading...\");\n    try {\n      const data = await fetchRecommendations();\n      setSongs(data.recommendations);\n      setPlaylistUrl(data.playlist_url);\n      setButtonText(\"Happy Listening!\");\n    } catch (error) {\n      console.error(\"Error fetching recommendations:\", error);\n    } finally {\n      setLoading(false); // âœ… Hide \"Loading...\" after fetching\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommended Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRecommendations,\n      style: styles.button,\n      disabled: loading,\n      children: [buttonText, \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"blue\"\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: styles.list,\n      children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: styles.item,\n        children: [song.artist, \" - \", song.track, \" (\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: song.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Listen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 55\n        }, this), \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), songs.length > 0 && /*#__PURE__*/_jsxDEV(PlaylistButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 34\n    }, this), playlistUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: playlistUrl,\n        target: \"_blank\",\n        children: \"View Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Recommendations, \"49yagEdpSsQPgrDOAmrHyHv8RyQ=\");\n_c = Recommendations;\nconst styles = {\n  button: {\n    padding: \"10px 20px\",\n    fontSize: \"16px\",\n    backgroundColor: \"#1DB954\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"20px\",\n    cursor: \"pointer\",\n    margin: \"10px\"\n  },\n  list: {\n    listStyle: \"none\",\n    padding: 0\n  },\n  item: {\n    padding: \"10px\",\n    fontSize: \"18px\"\n  }\n};\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","fetchRecommendations","PlaylistButton","jsxDEV","_jsxDEV","Recommendations","_s","songs","setSongs","playlistUrl","setPlaylistUrl","loading","setLoading","buttonText","setButtonText","getRecommendations","data","recommendations","playlist_url","error","console","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","styles","button","disabled","color","list","map","song","index","item","artist","track","href","url","target","rel","length","_c","padding","fontSize","backgroundColor","border","borderRadius","cursor","margin","listStyle","$RefreshReg$"],"sources":["D:/school/projects/spotify/recs/spotify-recommender/frontend/src/components/Recommendations.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { fetchRecommendations } from \"../api\";\r\nimport PlaylistButton from \"./PlaylistButton\";\r\n\r\nconst Recommendations = () => {\r\n    const [songs, setSongs] = useState([]);\r\n    const [playlistUrl, setPlaylistUrl] = useState(null);\r\n    const [loading, setLoading] = useState(false); // ðŸ”¹ Track loading state\r\n    const [buttonText, setButtonText] = useState(\"Get Recommendations\");\r\n\r\n    const getRecommendations = async () => {\r\n        setLoading(true); // âœ… Show \"Loading...\"\r\n        setButtonText(\"Loading...\");\r\n        \r\n        try {\r\n            const data = await fetchRecommendations();\r\n            setSongs(data.recommendations);\r\n            setPlaylistUrl(data.playlist_url);\r\n            setButtonText(\"Happy Listening!\");\r\n        } catch (error) {\r\n            console.error(\"Error fetching recommendations:\", error);\r\n        } finally {\r\n            setLoading(false); // âœ… Hide \"Loading...\" after fetching\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n            <h2>Recommended Songs</h2>\r\n\r\n            <button onClick={getRecommendations} style={styles.button} disabled={loading}>\r\n                {buttonText}  {/* âœ… Button text dynamically updates */}\r\n            </button>\r\n\r\n            {loading && <p style={{ color: \"blue\" }}>Loading...</p>}\r\n\r\n            <ul style={styles.list}>\r\n                {songs.map((song, index) => (\r\n                    <li key={index} style={styles.item}>\r\n                        {song.artist} - {song.track} (<a href={song.url} target=\"_blank\" rel=\"noopener noreferrer\">Listen</a>)\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            {songs.length > 0 && <PlaylistButton />}\r\n            {playlistUrl && <p><a href={playlistUrl} target=\"_blank\">View Playlist</a></p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    button: {\r\n        padding: \"10px 20px\",\r\n        fontSize: \"16px\",\r\n        backgroundColor: \"#1DB954\",\r\n        color: \"white\",\r\n        border: \"none\",\r\n        borderRadius: \"20px\",\r\n        cursor: \"pointer\",\r\n        margin: \"10px\",\r\n    },\r\n    list: { listStyle: \"none\", padding: 0 },\r\n    item: { padding: \"10px\", fontSize: \"18px\" },\r\n};\r\n\r\nexport default Recommendations;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}